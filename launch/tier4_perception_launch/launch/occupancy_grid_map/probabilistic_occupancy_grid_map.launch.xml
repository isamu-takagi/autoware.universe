<?xml version="1.0"?>
<launch>
  <!--default parameter follows node setting -->
  <arg name="input/obstacle_pointcloud" default="concatenated/pointcloud"/>
  <arg name="input/raw_pointcloud" default="no_ground/oneshot/pointcloud"/>
  <arg name="output" default="/perception/occupancy_grid_map/map"/>
  <arg name="use_intra_process" default="false"/>
  <arg name="use_multithread" default="false"/>
  <arg name="use_pointcloud_container" default="false"/>
  <arg name="container_name" default="occupancy_grid_map_container"/>
  <arg name="scan_origin" default="base_link"/>
  <arg name="map_origin" default="base_link"/>

  <!--default parameter follows node setting -->
  <arg name="method" default="pointcloud_based_occupancy_grid_map"/>
  <arg name="param_file" default="$(find-pkg-share probabilistic_occupancy_grid_map)/config/$(var method).param.yaml"/>

  <!--pointcloud based method-->
  <group if="$(eval &quot;'$(var method)'=='pointcloud_based_occupancy_grid_map'&quot;)">
    <include file="$(find-pkg-share probabilistic_occupancy_grid_map)/launch/pointcloud_based_occupancy_grid_map.launch.py">
      <arg name="input/obstacle_pointcloud" value="$(var input/obstacle_pointcloud)"/>
      <arg name="input/raw_pointcloud" value="$(var input/raw_pointcloud)"/>
      <arg name="output" value="$(var output)"/>
      <arg name="use_intra_process" value="$(var use_intra_process)"/>
      <arg name="use_multithread" value="$(var use_multithread)"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="container_name" value="$(var container_name)"/>
      <arg name="param_file" value="$(var param_file)"/>
      <arg name="scan_origin" value="$(var scan_origin)"/>
      <arg name="map_origin" value="$(var map_origin)"/>
    </include>
  </group>

  <!--laserscan based method-->
  <group if="$(eval &quot;'$(var method)'=='laserscan_based_occupancy_grid_map'&quot;)">
    <include file="$(find-pkg-share probabilistic_occupancy_grid_map)/launch/laserscan_based_occupancy_grid_map.launch.py">
      <arg name="input/obstacle_pointcloud" value="$(var input/obstacle_pointcloud)"/>
      <arg name="input/raw_pointcloud" value="$(var input/raw_pointcloud)"/>
      <arg name="output" value="$(var output)"/>
      <arg name="use_intra_process" value="$(var use_intra_process)"/>
      <arg name="use_multithread" value="$(var use_multithread)"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="container_name" value="$(var container_name)"/>
      <arg name="param_file" value="$(var param_file)"/>
      <arg name="scan_origin" value="$(var scan_origin)"/>
      <arg name="map_origin" value="$(var map_origin)"/>
    </include>
  </group>
</launch>
